---
#
# Copyright (c) 2016, RTE (http://www.rte-france.com)
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

# minimal test data
- name: extract minimalist DDB
  unarchive: src="~/minimalist_DDB.zip"
             dest="~"
             creates="~/minimalist_DDB"
  register: hadesInstalled


#
- name: remove archive
  file: state=absent path=~/minimalist_DDB.zip

#
- name: check redis status
  #sudo: yes
  become: true
  become_user: root
  command: sudo service mysqld status
  ignore_errors: yes
  register: res

#
# service mysqld start
# service mysqld stop
# service mysqld restart
- name: Start Mysql Service
  become: true
  become_user: root
  command: sudo service mysqld start
  register: dbmaria_start
  ignore_errors: yes

#
- name: Report start of mysql
  fail:
    msg: |
      Service mysql is not running.
      {{ dbmaria_start.stdout }}
      {{ dbmaria_start.stderr }}
  when: dbmaria_start | failed

#
- name: start wildfly
  become: true
  become_user: root
  shell: "$JBOSS_HOME/bin/standalone.sh&"
  register: wildfly_start
  ignore_errors: yes

#
- name: Report start of wildfly
  fail:
    msg: |
      WildFly is not running.
      {{ wildfly_start.stdout }}
      {{ wildfly_start.stderr }}
  when: wildfly_start | failed

#
- name: unload previous data
  command: "{{ipst_install_path}}/bin/itools ddb-unload --host 127.0.0.1 --port 8080 --user user --password password"
  register: ddb_unload


#
- name: load new data
  command: "{{ipst_install_path}}/bin/itools ddb-load-eurostag --host 127.0.0.1 --port 8080 --user user --password password --eurostag-version 5.1.1 --data-dir ~/minimalist_DDB"
  register: ddb_load
  #in case, ignore errors (to proceed to next steps and possibly log the errors)
  ignore_errors: True

#
- debug:
    var="{{ item }}"
  when: "1==0"
  with_items:
      - dbmaria_start
      - wildfly_start
      - ddb_unload
      - ddb_load

#local dumps a per-host log of iPST install script execution
- name: load dump log, to
  local_action: copy content="cmd=> {{ ddb_load.cmd }}\nstart=> {{ ddb_load.start }}\nend=> {{ ddb_load.end }}\n===== DUMP OUT =====\n{{ ddb_load.stdout }}\n===== DUMP ERR =====\n{{ ddb_load.stderr }}"
                dest="~/{{ inventory_hostname }}_tmp"
  when: ddb_load is defined

# format log file
- name: load format log
  local_action: shell /usr/bin/sed 's/\\n/\n/g' <~/{{ inventory_hostname }}_tmp >{{ playbook_dir }}/install_ddb_{{ inventory_hostname }}.log && rm ~/{{ inventory_hostname }}_tmp
  when: ddb_load is defined
