---
#
# Copyright (c) 2016, RTE (http://www.rte-france.com)
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# this module execute the ddb-load-eurostag tools with test data

##
- block:
    - debug:
        msg: " log file: {{ ddb_log_file }}"

    - set_fact:
        has_error: false

    - name: Copy EAR
      copy: remote_src=True
            src="{{ ipst_sources_path+'/'+ear_path+'/'+ear_name }}"
            dest="{{ wildfly_prefix }}/standalone/deployments/{{ ear_name }}"
      register: copy_ear

    - name: Extract test data
      unarchive: src="{{ ddb_locale_path+ddb_archive_name }}"
                 dest="{{ ddb_remote_path.split("/")[0:-1]|join("/") }}"
                 creates="{{ ddb_remote_path }}"
      register: ddb_installed

    - name: Create ddb-load-eurostag test script
      template: src=test_ddb_load.sh.j2
                dest="{{ project_script }}/test_ddb_load.sh"
                mode=a+x

    - name: ddb-load-eurostag test
      shell: "{{ project_script }}/test_ddb_load.sh"
      register: eurostag

    - set_fact:
        eurostag:
          stdout_lines: "{{eurostag.stdout_lines|map('regex_replace', '\\\u001b\\[0m','')|map('regex_replace', '\\\u001b\\[33m','')|map('regex_replace', '\\t','    ') | list}}"

  rescue:
    - set_fact:
        has_error: true

  always:
    - name: Format ddb-load-eurostag result
      command: 'echo "{{ eurostag.stderr }}" |/bin/sed "s/\\t/    /g" |/bin/sed "s/\\n/\n/g"'
      when: eurostag is defined and not eurostag.skipped
      register: eurostag_stderr
      ignore_errors: True

    - name: Remove previous log file
      local_action: file state=absent path="{{ ddb_log_file }}"

    - name: Create log file
      local_action: lineinfile dest="{{ ddb_log_file }}"
        line="{{ {'_name':item._name|default('n/a') ,'cmd':item.cmd|default('n/a') ,'delta':item.delta|default('n/a') ,'end':item.end|default('n/a') ,'rc':item.rc|default('n/a') ,'state':item.state|default('n/a') ,'start':item.start|default('n/a') ,'stdout_lines':item.stdout_lines|default('n/a'), 'stderr':item.stderr_lines|default(omit)} | to_nice_json }}"
        state=present insertafter=EOF create=True
      when: item is defined
      no_log: True
      with_items:
        - "{{ eurostag |default({}) |combine({'_name':'eurostag'}) |combine({'stderr_lines':eurostag_stderr.stdout_lines|default([])}) }}"
        #- "{{ wildfly_console_log |combine({'_name':'wildfly_console_log'}) }}"

    #- debug: var="ddb_unload"
    - name: Check status
      fail:
        msg: ddb-load-eurostag tools fail please see {{ ddb_log_file }} log file
      when:  has_error
