---
#
# Copyright (c) 2016, RTE (http://www.rte-france.com)
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
- name: Copy EAR
  copy: remote_src=True
        src={{ ansible_env.HOME }}/ipst_ansible/ipst/iidm-ddb/iidm-ddb-ear/target/iidm-ddb-ear.ear
        dest=$JBOSS_HOME/standalone/deployments/iidm-ddb-ear.ear
  become: true
  become_user: root

# minimal test data
- name: extract minimalist DDB
  unarchive: src="~/minimalist_DDB.zip"
             dest="{{ ansible_env.HOME }}"
             creates="{{ ansible_env.HOME }}/minimalist_DDB"
  register: hadesInstalled


#
- name: remove archive
  file: state=absent path={{ ansible_env.HOME }}/minimalist_DDB.zip

#
# service mysqld start
# service mysqld stop
# service mysqld restart
- name: Start dbmaria Service
  become: true
  become_user: root
  command: sudo service mysqld start
  register: dbmaria_start
  ignore_errors: yes

#
- name: Report start of mysql
  fail:
    msg: |
      Service mysql is not running.
      {{ dbmaria_start.stdout }}
      {{ dbmaria_start.stderr }}
  when: dbmaria_start | failed

#
- name: Create init db script
  template: src=init_dbmaria.j2
            dest="{{ ansible_env.HOME }}/init_dbmaria.sql"

#
- name: Initialize DB
  shell: mysql < init_dbmaria.sql
  register: dbmaria_init
  become: true
  become_user: root

#
- name: remove init db script
  file: state=absent
        path={{ ansible_env.HOME }}/init_dbmaria.sql

#
- name: wildFly start service
  service: name=wildfly enabled=yes state=started
  become: true
  become_user: root
  register: wildfly_start
  ignore_errors: yes

#
- name: wildfly log
  command: cat /var/log/wildfly/console.log
  register: wildfly_start_cat

#
- name: Report start of Wildfly
  fail:
    msg: |
      Service wildfly is not running.
      {{ wildfly_start.stdout }}
      {{ wildfly_start.stderr }}
  when: wildfly_start | failed

#
- name: test
  become: true
  become_user: root
  shell: "netstat -lntup"
  register: netstatB

#
- name: unload previous data
  command: "{{ipst_install_path}}/bin/itools ddb-unload --host 127.0.0.1 --port 8080 --user user --password password"
  register: ddb_unload
  ignore_errors: True

#
- name: load new data
  command: "{{ipst_install_path}}/bin/itools ddb-load-eurostag --host 127.0.0.1 --port 8080 --user user --password password --eurostag-version 5.1.1 --data-dir {{ ansible_env.HOME }}/minimalist_DDB"
  register: ddb_load
  #in case, ignore errors (to proceed to next steps and possibly log the errors)
  ignore_errors: True


#
- debug:
    var="{{ item }}"
  when: "1==0"
  with_items:
      - test_analysis
      - wildfly_start
      #- wildfly_start_cat
      - dbmaria_start
      - dbmaria_init
      - ddb_unload
      - ddb_load
      - netstatB

#
- name: remove lineinfile
  local_action: file state=absent path="{{ playbook_dir }}/install_final_{{ inventory_hostname }}.log"

#
- name: lineinfile
  local_action: lineinfile
      dest="{{ playbook_dir }}/install_final_{{ inventory_hostname }}.log"
      line="{{ {'_name':item._name|default('n/a') ,'cmd':item.cmd|default('n/a') ,'delta':item.delta|default('n/a') ,'end':item.end|default('n/a') ,'rc':item.rc|default('n/a') ,'state':item.state|default('n/a') ,'start':item.start|default('n/a') ,'stdout_lines':item.stdout_lines|default('n/a')} | to_nice_json }}"
      state=present
      insertafter=EOF
      create=True
  when: item is defined
  no_log: True
  with_items:
      - "{{ wildfly_start |combine({'_name':'wildfly_start'}) }}"
      - "{{ wildfly_start_cat |combine({'_name':'wildfly_start_cat'}) }}"
      - "{{ dbmaria_start |combine({'_name':'dbmaria_start'}) }}"
      - "{{ dbmaria_init |combine({'_name':'dbmaria_init'}) }}"
      - "{{ ddb_unload |combine({'_name':'ddb_unload'}) }}"
      - "{{ ddb_load |combine({'_name':'ddb_load'}) }}"
      - "{{ netstatB |combine({'_name':'netstatB'}) }}"

#
- name: check load data
  fail:
    msg: |
      Loading test data fail
      please check install_final_XXX.log file
  when: '" ERROR " in ddb_load.stdout'
